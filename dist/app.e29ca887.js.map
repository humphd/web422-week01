{"version":3,"sources":["src/users.js","src/components/avatar.js","src/components/name.js","src/components/email.js","src/components/user-info.js","src/components/profile-card.js","src/app.js"],"names":["apiUrl","load","url","fetch","then","res","ok","Error","status","json","results","data","catch","err","console","warn","module","exports","Avatar","imgUrl","name","img","Image","src","alt","title","className","width","height","Name","h2","document","createElement","innerText","Email","email","link","href","innerHTML","h3","appendChild","require","UserInfo","div","render","ProfileCard","id","avatarUrl","section","avatar","info","users","init","main","querySelector","length","forEach","user","first_name","last_name","profileCard","window","onload"],"mappings":"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","file":"app.e29ca887.js","sourceRoot":"..","sourcesContent":["const apiUrl = 'https://reqres.in/api';\n\nfunction load() {\n  const url = `${apiUrl}/users`;\n\n  return fetch(url)\n    .then(res => {\n      if(!res.ok) {\n        throw new Error(`API returned status code ${res.status}`);\n      }\n\n      return res.json();\n    })\n    .then(results => results.data)\n    .catch(err => {\n      console.warn(err);\n\n      // We have no users to process, return an empty array\n      return [];\n    });\n}\n\nmodule.exports.load = load;\n","class Avatar {\n  constructor(imgUrl, name) {\n    this.url = imgUrl;\n    this.name = name;\n  }\n\n  render() {\n    // Create an <img> element for the profile's avatar\n    const img = new Image();\n\n    img.src = this.url;\n    img.alt = this.name;\n    img.title = this.name;\n    img.className = 'profile-avatar';\n    img.width = 128;\n    img.height = 128;\n\n    return img;\n  }\n}\n\nmodule.exports = Avatar;\n","class Name {\n  constructor(name) {\n    this.name = name;\n  }\n\n  render() {\n    // Create an <h2> element for the profile's name\n    const h2 = document.createElement('h2');\n    h2.innerText = this.name;\n    h2.className = 'profile-name';\n    return h2;\n  }\n}\n\nmodule.exports = Name;\n","class Email {\n  constructor(email) {\n    this.email = email;\n  }\n\n  render() {\n    // Create an <h3><a>...</a></h3> element for the profile's email\n    const link = document.createElement('a');\n    link.href=`mailto:${this.email}`;\n    link.innerHTML = this.email;\n\n    const h3 = document.createElement('h3');\n    h3.className = 'profile-email';\n    h3.appendChild(link);\n    return h3;\n  }\n}\n\nmodule.exports = Email;\n","const Name = require('./name');\nconst Email = require('./email');\n\nclass UserInfo {\n  constructor(name, email) {\n    this.name = name;\n    this.email = email;\n  }\n\n  render() {\n    // Create and combine the name and email elements together in a <div>\n    const name = new Name(this.name);\n    const email = new Email(this.email);\n\n    const div = document.createElement('div');\n    div.className = 'user-info';\n    div.appendChild(name.render());\n    div.appendChild(email.render());\n\n    return div;\n  }\n}\n\nmodule.exports = UserInfo;\n","const Avatar = require('./avatar');\nconst UserInfo = require('./user-info');\n\nclass ProfileCard {\n  constructor(id, name, email, avatarUrl) {\n    this.id = id;\n    this.name = name;\n    this.email = email;\n    this.avatarUrl = avatarUrl;\n  }\n\n  render() {\n    // Create the entire profile card, with img, name, email etc.\n    const section = document.createElement('section');\n    section.id = `user-${this.id}`;\n    section.className = 'profile-card';\n  \n    const avatar = new Avatar(this.avatarUrl, this.name);\n    const info = new UserInfo(this.name, this.email);\n  \n    section.appendChild(avatar.render());\n    section.appendChild(info.render());\n  \n    return section;\n  }\n}\n\nmodule.exports = ProfileCard;\n","const users = require('./users');\nconst ProfileCard = require('./components/profile-card');\n\nfunction init() {\n  // Safe to query for DOM nodes now that window is loaded\n  const main = document.querySelector('main');\n\n  // Load all users from web API as JSON and process into DOM nodes\n  users.load()\n    // We have to wait for the fetch() response's Promise to complete\n    .then(users => {\n      // If we couldn't load any users, indicate that\n      if(!(users && users.length)) {\n        main.innerHTML = 'Unable to load user data at this time.';\n        return;\n      }\n\n      // Otherwise, iterate across all the users\n      users.forEach(user => {\n        // Extract and prepare the user properties we care about\n        const id = user.id;\n        const name = `${user.first_name} ${user.last_name}`;\n        const email = user.email;\n        const avatarUrl = user.avatar;\n\n        // Create a ProfileCard of DOM nodes for each user\n        const profileCard = new ProfileCard(id, name, email, avatarUrl);\n\n        // Append the user's ProfileCard DOM nodes to our document's main element\n        main.appendChild(profileCard.render());\n      })\n    });\n}\n\nwindow.onload = init;\n"]}